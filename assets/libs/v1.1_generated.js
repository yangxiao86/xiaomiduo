// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var com = com || {};

/**
 * @const
 * @namespace
 */
com.vipkid = com.vipkid || {};

/**
 * @const
 * @namespace
 */
com.vipkid.iscp = com.vipkid.iscp || {};

/**
 * @const
 * @namespace
 */
com.vipkid.iscp.websocket = com.vipkid.iscp.websocket || {};

/**
 * @const
 * @namespace
 */
com.vipkid.iscp.websocket.message = com.vipkid.iscp.websocket.message || {};

/**
 * @const
 * @namespace
 */
com.vipkid.iscp.websocket.message.tcp = com.vipkid.iscp.websocket.message.tcp || {};

/**
 * @constructor
 */
com.vipkid.iscp.websocket.message.tcp.TcpHeader = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.vipkid.iscp.websocket.message.tcp.TcpHeader}
 */
com.vipkid.iscp.websocket.message.tcp.TcpHeader.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.vipkid.iscp.websocket.message.tcp.TcpHeader=} obj
 * @returns {com.vipkid.iscp.websocket.message.tcp.TcpHeader}
 */
com.vipkid.iscp.websocket.message.tcp.TcpHeader.getRootAsTcpHeader = function(bb, obj) {
  return (obj || new com.vipkid.iscp.websocket.message.tcp.TcpHeader).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
com.vipkid.iscp.websocket.message.tcp.TcpHeader.prototype.key = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
com.vipkid.iscp.websocket.message.tcp.TcpHeader.prototype.value = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.vipkid.iscp.websocket.message.tcp.TcpHeader.startTcpHeader = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyOffset
 */
com.vipkid.iscp.websocket.message.tcp.TcpHeader.addKey = function(builder, keyOffset) {
  builder.addFieldOffset(0, keyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 */
com.vipkid.iscp.websocket.message.tcp.TcpHeader.addValue = function(builder, valueOffset) {
  builder.addFieldOffset(1, valueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.vipkid.iscp.websocket.message.tcp.TcpHeader.endTcpHeader = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.vipkid.iscp.websocket.message.tcp.TcpPackage}
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.vipkid.iscp.websocket.message.tcp.TcpPackage=} obj
 * @returns {com.vipkid.iscp.websocket.message.tcp.TcpPackage}
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.getRootAsTcpPackage = function(bb, obj) {
  return (obj || new com.vipkid.iscp.websocket.message.tcp.TcpPackage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {com.vipkid.iscp.websocket.message.tcp.TcpHeader=} obj
 * @returns {com.vipkid.iscp.websocket.message.tcp.TcpHeader}
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.prototype.header = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new com.vipkid.iscp.websocket.message.tcp.TcpHeader).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.prototype.headerLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.prototype.body = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.prototype.bodyLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int8Array}
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.prototype.bodyArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Int8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.startTcpPackage = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} headerOffset
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.addHeader = function(builder, headerOffset) {
  builder.addFieldOffset(0, headerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.createHeaderVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.startHeaderVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} bodyOffset
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.addBody = function(builder, bodyOffset) {
  builder.addFieldOffset(1, bodyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.createBodyVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.startBodyVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.endTcpPackage = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
com.vipkid.iscp.websocket.message.tcp.TcpPackage.finishTcpPackageBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @constructor
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.vipkid.iscp.websocket.message.tcp.TcpRespBody}
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.vipkid.iscp.websocket.message.tcp.TcpRespBody=} obj
 * @returns {com.vipkid.iscp.websocket.message.tcp.TcpRespBody}
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.getRootAsTcpRespBody = function(bb, obj) {
  return (obj || new com.vipkid.iscp.websocket.message.tcp.TcpRespBody).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.prototype.code = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.prototype.data = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.prototype.message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {flatbuffers.Long}
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.prototype.serverTime = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.startTcpRespBody = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} codeOffset
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.addCode = function(builder, codeOffset) {
  builder.addFieldOffset(0, codeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.addData = function(builder, dataOffset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(2, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} serverTime
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.addServerTime = function(builder, serverTime) {
  builder.addFieldInt64(3, serverTime, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.vipkid.iscp.websocket.message.tcp.TcpRespBody.endTcpRespBody = function(builder) {
  var offset = builder.endObject();
  return offset;
};

// Exports for Node.js and RequireJS
this.com = com;
